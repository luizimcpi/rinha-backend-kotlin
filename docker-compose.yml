version: '3.4'
services:
  api1: &api1
    build:
      dockerfile: ./Dockerfile
      context: .
    image: luizimcpi/rinha-backend-kotlin-2024
    environment:
      - DATABASE_URL=jdbc:postgresql://database:5432/postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
    hostname: api1
    depends_on:
      - database
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    expose:
      - "9001"
    networks:
      - prod
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '150MB'
  api2:
    <<: *api1
    hostname: api2

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - prod
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '50MB'

  database:
    restart: always
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
    networks:
      - prod
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '200MB'
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=2096 -c synchronous_commit=0 -c full_page_writes=0 -c fsync=off -c check_function_bodies=false

networks:
  prod:
    driver: bridge